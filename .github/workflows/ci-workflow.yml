name: CI

on:
  
  push:
    branches: [development, codebase_improvements]
    paths:
      - 'src/**'
      - 'prisma/**'
      - 'package.json'
      - 'package-lock.json'
      - 'postcss.config.*'
      - 'next.config.*'
      - 'tailwind.config.*'
      - 'tsconfig.json'
      - 'eslint.config.*'
      - 'components.json'
      
  pull_request:
    branches: [main, development]
    types: [opened, synchronize, reopened]

  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: "postgresql://user:password@localhost:5432/db"
      DIRECT_URL: "postgresql://user:password@localhost:5432/db"

    steps:
      - name: Display workflow context info
        run: |
          echo "Workflow: $GITHUB_WORKFLOW"
          echo "Run ID: $GITHUB_RUN_ID"
          echo "Event: $GITHUB_EVENT_NAME"
          echo "Actor: $GITHUB_ACTOR"
          echo "Branch/Ref: $GITHUB_REF"
          echo "Commit SHA: $GITHUB_SHA"
          echo "Repository: $GITHUB_REPOSITORY"
          echo "Database URL: $DATABASE_URL"
          echo "Node version: 20"

      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Set up Node.js and enable npm cache
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Node.js dependencies with npm ci
        run: npm ci

      - name: Lint code with ESLint
        run: npm run lint

      - name: Type check with TypeScript
        run: npm run typecheck

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Apply Prisma migrations
        run: npx prisma migrate deploy

      - name: Build Next.js app
        run: npm run build

      - name: Seed database (create admin user)
        run: npx prisma db seed

      - name: Upload Next.js build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: .next
          
      - name: Run tests
        run: npm test 